<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.school.HotelSystem.system.dao.UserRoleMapper">
  <resultMap id="BaseResultMap" type="com.school.HotelSystem.system.model.UserRole">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, role_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_role
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.school.HotelSystem.system.model.UserRole">
    insert into user_role (id, user_id, role_id
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.school.HotelSystem.system.model.UserRole">
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.school.HotelSystem.system.model.UserRole">
    update user_role
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.school.HotelSystem.system.model.UserRole">
    update user_role
    set user_id = #{userId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  
  
  <!-- ################################################################################## -->
  <select id="queryUserRoleList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role
  </select>
  

    <select id="queryYuangongList" resultMap="ClassResultMap3">
   SELECT * from (shrio_user LEFT JOIN user_role ON shrio_user.id=user_role.user_id) LEFT JOIN role_info ON user_role.role_id=role_info.role_id
  </select>
    <resultMap type="com.school.HotelSystem.system.model.UserRole" id="ClassResultMap3">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="roleId" column="role_id"/>
        <association property="roleInfo" javaType="com.school.HotelSystem.system.model.RoleInfo">
            <id property="roleId" column="role_id"/>
            <result property="roleName" column="role_name"/>
        </association>
        <!-- ofType指定students集合中的对象类型 -->
        <association property="shrioUser" javaType="com.school.HotelSystem.system.model.ShrioUser">
            <id property="id" column="id"/>
            <result property="username" column="username"/>
            <result property="usercode" column="usercode"/>
            <result property="usercard" column="usercard"/>
            <result property="password" column="password"/>
            <result property="sex" column="sex"/>
            <result property="age" column="age"/>
            <result property="tell" column="tell"/>
            <result property="locked" column="locked"/>
        </association>
    </resultMap>

  <delete id="deleteByUserId" parameterType="java.lang.String">
    delete from user_role
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  
</mapper>