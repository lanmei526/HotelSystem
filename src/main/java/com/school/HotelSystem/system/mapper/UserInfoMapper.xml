<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.school.HotelSystem.system.dao.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.school.HotelSystem.system.model.UserInfo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_call" jdbcType="INTEGER" property="userCall" />
    <result column="user_jifen" jdbcType="INTEGER" property="userJifen" />
    <result column="locked" jdbcType="CHAR" property="locked" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, user_name, user_password, user_call, user_jifen, locked
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.school.HotelSystem.system.model.UserInfo">
    insert into user_info (id, user_id, user_name, 
      user_password, user_call, user_jifen, 
      locked)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{userPassword,jdbcType=VARCHAR}, #{userCall,jdbcType=INTEGER}, #{userJifen,jdbcType=INTEGER}, 
      #{locked,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.school.HotelSystem.system.model.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userCall != null">
        user_call,
      </if>
      <if test="userJifen != null">
        user_jifen,
      </if>
      <if test="locked != null">
        locked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userCall != null">
        #{userCall,jdbcType=INTEGER},
      </if>
      <if test="userJifen != null">
        #{userJifen,jdbcType=INTEGER},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.school.HotelSystem.system.model.UserInfo">
    update user_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userCall != null">
        user_call = #{userCall,jdbcType=INTEGER},
      </if>
      <if test="userJifen != null">
        user_jifen = #{userJifen,jdbcType=INTEGER},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.school.HotelSystem.system.model.UserInfo">
    update user_info
    set user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_call = #{userCall,jdbcType=INTEGER},
      user_jifen = #{userJifen,jdbcType=INTEGER},
      locked = #{locked,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>